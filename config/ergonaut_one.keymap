#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>

#define ZMK_POINTING_DEFAULT_MOVE_VAL 1500  // default: 600
#define ZMK_POINTING_DEFAULT_SCRL_VAL 20    // default: 10

#include <dt-bindings/zmk/pointing.h>
#define DEF 0
#define LWR 1
#define RSE 2
#define ADJ 3

&lt { quick-tap-ms = <200>; };

&mt { quick-tap-ms = <400>; };

/ {
    conditional_layers {
        compatible = "zmk,conditional-layers";

        tri-layer {
            if-layers = <2 1>;
            then-layer = <3>;
        };
    };

    behaviors {
        hm: hm {
            compatible = "zmk,behavior-hold-tap";
            label = "Home row mods";
            #binding-cells = <2>;
            flavor = "tap-preferred";
            tapping-term-ms = <100>;
            quick-tap-ms = <100>;
            hold-trigger-key-positions = <16 15 20 19>;
            bindings = <&kp>, <&kp>;
        };
    };

    combos { compatible = "zmk,combos"; };

    keymap {
        compatible = "zmk,keymap";

        default_layer {
            bindings = <
&none  &kp Q  &kp W  &kp E            &kp R               &kp T        &kp Y                 &kp U      &kp I         &kp O    &kp P     &none
&none  &kp A  &kp S  &hm LEFT_GUI D   &kp F               &kp G        &kp H                 &kp J      &hm LGUI K    &kp L    &kp SEMI  &none
&none  &kp Z  &kp X  &kp C            &kp V               &kp B        &kp N                 &kp M      &kp COMMA     &kp DOT  &kp FSLH  &none
                     &lt 1 BACKSPACE  &mt LCTRL LEFT_ALT  &lt 2 SPACE  &mt LEFT_SHIFT ENTER  &lt 2 TAB  &lt 1 ESCAPE
            >;
        };

        raise_layer {
            bindings = <
&none  &kp C_VOLUME_DOWN  &kp C_VOLUME_UP    &kp C_BRI_DEC         &kp C_BRIGHTNESS_INC   &bootloader  &mkp LCLK       &msc SCRL_DOWN  &msc SCRL_UP  &mkp RCLK        &none  &none
&none  &kp LEFT_BRACKET   &kp RIGHT_BRACKET  &kp LEFT_PARENTHESIS  &kp RIGHT_PARENTHESIS  &none        &kp LEFT_ARROW  &kp DOWN_ARROW  &kp UP        &kp RIGHT        &none  &none
&none  &none              &none              &kp LEFT_BRACE        &kp RIGHT_BRACE        &none        &mmv MOVE_LEFT  &mmv MOVE_DOWN  &mmv MOVE_UP  &mmv MOVE_RIGHT  &none  &none
                                             &trans                &trans                 &trans       &trans          &trans          &trans
            >;
        };

        lower_layer {
            bindings = <
&none  &none            &none         &kp TILDE     &kp UNDER     &kp MINUS    &kp EQUAL     &kp PLUS       &kp SQT       &kp DOUBLE_QUOTES  &none   &none
&none  &kp NUMBER_1     &kp NUMBER_2  &kp NUMBER_3  &kp NUMBER_4  &kp N5       &kp NUMBER_6  &kp N7         &kp N8        &kp N9             &kp N0  &none
&none  &kp EXCLAMATION  &kp AT_SIGN   &kp HASH      &kp DOLLAR    &kp PERCENT  &kp CARET     &kp AMPERSAND  &kp ASTERISK  &kp BACKSLASH      &none   &none
                                      &trans        &trans        &trans       &trans        &trans         &trans
            >;
        };

        adjust_layer {
            bindings = <
&none  &kp F1        &kp F2        &kp F3        &kp F4        &kp F5        &kp F6        &kp F7        &kp F8        &kp F9        &kp F10       &none
&none  &bt BT_SEL 0  &bt BT_SEL 1  &bt BT_SEL 2  &bt BT_SEL 3  &bt BT_SEL 4  &bt BT_SEL 4  &bt BT_SEL 3  &bt BT_SEL 2  &bt BT_SEL 1  &bt BT_SEL 0  &none
&none  &bt BT_CLR    &sys_reset    &none         &none         &none         &none         &none         &none         &sys_reset    &bt BT_CLR    &none
                                   &trans        &none         &trans        &none         &trans        &trans
            >;
        };

        layer_4 {
            bindings = <
&trans          &trans  &trans  &trans  &trans  &trans     &trans  &trans  &trans  &trans  &trans  &trans
&kp LEFT_SHIFT  &trans  &trans  &trans  &trans  &trans     &trans  &trans  &trans  &trans  &trans  &trans
&kp LCTRL       &trans  &trans  &trans  &trans  &trans     &trans  &trans  &trans  &trans  &trans  &trans
                                &trans  &none   &kp SPACE  &trans  &trans  &trans
            >;
        };
    };
};
